package org.serratec.backend.projeto02.controllers;

import java.util.Set;

import org.serratec.backend.projeto02.model.ToDoEntity;
import org.serratec.backend.projeto02.service.ToDoService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/todo")
public class ToDoController {

	@Autowired /* Realiza a injeção de dependência da classe service; */
	ToDoService service;

	//Função de GET;
	@GetMapping
	public Set<ToDoEntity> toDo() {
		/* Puxo o método da classe service sem a necessidade de instanciar a classe */
		return service.Setar();
	}

	@GetMapping("/{id}")
	public ToDoEntity lerTarefa(@PathVariable Integer id) {
		return service.readOne(id);
	}
	
	//Função de POST;
	@PostMapping
	public Set<ToDoEntity> adicionarTarefa(@RequestBody ToDoEntity obj) {
		service.adicionarEvento(obj);
		return toDo();
	}
	
	
	//Atualizar tarefa
	@PutMapping ("/{id}")
	public void update(@RequestBody ToDoEntity tarefa, @PathVariable Integer id) {
		service.update(tarefa, id);
	}

	
	//Função de DELETE;
	@DeleteMapping ("/remove")
	public Set<ToDoEntity> removerTarefa(@RequestParam Integer id) {
		service.deletarTarefa(id);
		return toDo();
	}
}
